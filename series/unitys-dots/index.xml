<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unity's DOTS on Yet another gamedev blog</title><link>https://dotsplayground.com/series/unitys-dots/</link><description>Recent content in Unity's DOTS on Yet another gamedev blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 01 Apr 2020 10:59:02 +0100</lastBuildDate><atom:link href="https://dotsplayground.com/series/unitys-dots/index.xml" rel="self" type="application/rss+xml"/><item><title>How to find more information about a DOTS packages?</title><link>https://dotsplayground.com/2020/04/howtofinddotspackageinformation/</link><pubDate>Wed, 01 Apr 2020 10:59:02 +0100</pubDate><guid>https://dotsplayground.com/2020/04/howtofinddotspackageinformation/</guid><description>Do you want to learn more about DOTS internals? I hope you find your way to this article with the search for answers. I will show you quickly how to find out more about Unity and its internals. This is a great source of inspiration. As a game development student at Breda University of applied sciences, I could apply the gained knowledge from just researching the files besides in my DOTS project also in my C++ project.</description></item><item><title>Unity DOTS Editor</title><link>https://dotsplayground.com/2020/02/dotseditor/</link><pubDate>Sun, 23 Feb 2020 10:59:02 +0100</pubDate><guid>https://dotsplayground.com/2020/02/dotseditor/</guid><description>Introduction Knowing how the Unity editor can support you while developing with DOTS is important to speed up the workflow and get debugging information. In this post I will go over what editor features are available for DOTS.
To follow along with this post you will needed the following packages.
Entities: Installing this package and its dependencies will add everything needed to develop with DOTS, such as the burst compiler and job system.</description></item><item><title>How Entites could interact</title><link>https://dotsplayground.com/2019/11/entityinteraction/</link><pubDate>Thu, 21 Nov 2019 21:45:00 +0100</pubDate><guid>https://dotsplayground.com/2019/11/entityinteraction/</guid><description>How can we implement interaction between entities? Before we can actually answer that question, we should formulate the actual problem.
Summary There are two problems in an ECS when it comes to interaction between entities: read and write access. The truth is that interactions do not really exists, they hide the implementation of the underlaying relationship. A relationship is then nothing else than the transformation of data. (More about)
To reason about the right tool for creating those transformations, we need to reason about our code and ask ourselves the following five questions:</description></item><item><title>Linking entities or entity relationships</title><link>https://dotsplayground.com/2019/11/linkingentities/</link><pubDate>Thu, 21 Nov 2019 14:59:02 +0100</pubDate><guid>https://dotsplayground.com/2019/11/linkingentities/</guid><description>The problem Often in games different objects interact with each other, eg. a button opens a door, a child follows its parent etc. With the new ESC system those hierarchies aren&amp;rsquo;t trivial, hierarchies don&amp;rsquo;t really exist natively. So how do we link entities in a hierarchy?
Linking entities as a group In the new ESC if you translate a GameObject via ConvertToEntity to entities the hierarchy would not be translated into the ESC World.</description></item></channel></rss>